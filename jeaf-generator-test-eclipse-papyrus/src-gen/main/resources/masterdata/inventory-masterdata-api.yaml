openapi: 3.0.3

info:
  title: NOVA Master Data API
  version: 1.6.38-SNAPSHOT
  description: >-
    NOVA Master Data API to access inventory information.
  contact:
    name: Andreas Schlapbach
    email: andreas.schlapbach@sbb.ch

servers:
  - url: https://developers.sbb.ch/nova-master-data
    description: >-
      NOVA Master Data API

tags:
  - name: master data
    description: >-
      Master data resources to get vehicle or product information hosted by
      an inventory.

paths:
  # InventoryMasterDataService
  /inventory/vehicles:
    get:
      tags:
        - master data
      summary: returns a list of vehicles hosted in the inventory
      operationId: getVehicles
      parameters:
        - $ref: '../inventory-booking-api.yaml#/components/parameters/acceptLanguage'
        - $ref: '../inventory-booking-api.yaml#/components/parameters/traceParent'
        - $ref: '../inventory-booking-api.yaml#/components/parameters/traceState'
        - name: operatorRef
          in: query
          description: >-
            If not set, all vehicles of all operators are returned
          required: false
          schema:
            type: string
            example: '11'
        - name: uicCountryCode
          in: query
          description: >-
            TODO Please add comment
          required: false
          schema:
            type: string
            example: '85'
        - name: lastModified
          in: query
          description: >-
            TODO Please add comment
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: >-
            returns a list of vehicles managed in this inventory system.
            An inventory Item is defined by its validity range and can have multiple validity ranges
            in which it is enabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponse'
        '400':
          $ref: '../inventory-booking-api.yaml#/components/responses/BadRequestResponse'
        '401':
          $ref: '../inventory-booking-api.yaml#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '../inventory-booking-api.yaml#/components/responses/ForbiddenResponse'
        '404':
          $ref: '../inventory-booking-api.yaml#/components/responses/NotFoundResponse'
        '406':
          $ref: '../inventory-booking-api.yaml#/components/responses/NotAcceptableResponse'
        '415':
          $ref: '../inventory-booking-api.yaml#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '../inventory-booking-api.yaml#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '../inventory-booking-api.yaml#/components/responses/NotImplementedResponse'
        '503':
          $ref: '../inventory-booking-api.yaml#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '../inventory-booking-api.yaml#/components/responses/DefaultErrorResponse'
  /inventory/productDefinitions:
    get:
      tags:
        - master data
      summary: returns a list of products hosted in the inventory
      operationId: getProductDefinitions
      parameters:
        - $ref: '../inventory-booking-api.yaml#/components/parameters/acceptLanguage'
        - $ref: '../inventory-booking-api.yaml#/components/parameters/traceParent'
        - $ref: '../inventory-booking-api.yaml#/components/parameters/traceState'
        - name: operatorRef
          in: query
          description: >-
            If not set, all vehicles of all operators are returned
          required: false
          schema:
            type: string
            example: '11'
        - name: uicCountryCode
          in: query
          description: >-
            TODO Please add comment
          required: false
          schema:
            type: string
            example: '85'
        - name: lastModified
          in: query
          description: >-
            TODO Please add comment
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: >-
            TODO Please add comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDefinitionResponse'
        '400':
          $ref: '../inventory-booking-api.yaml#/components/responses/BadRequestResponse'
        '401':
          $ref: '../inventory-booking-api.yaml#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '../inventory-booking-api.yaml#/components/responses/ForbiddenResponse'
        '404':
          $ref: '../inventory-booking-api.yaml#/components/responses/NotFoundResponse'
        '406':
          $ref: '../inventory-booking-api.yaml#/components/responses/NotAcceptableResponse'
        '415':
          $ref: '../inventory-booking-api.yaml#/components/responses/UnsupportedMediaTypeResponse'
        '500':
          $ref: '../inventory-booking-api.yaml#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '../inventory-booking-api.yaml#/components/responses/NotImplementedResponse'
        '503':
          $ref: '../inventory-booking-api.yaml#/components/responses/ServiceUnavailableResponse'
        'default':
          $ref: '../inventory-booking-api.yaml#/components/responses/DefaultErrorResponse'


security:
  - oAuth2ClientCredentials: []

components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      description: >-
        See https://swagger.io/docs/specification/authentication/oauth2/
      flows:
        clientCredentials:
          tokenUrl: 'https://login.microsoftonline.com/tbd'
          refreshUrl: 'TODO Please add required refresh URL'
          scopes: {}

  schemas:
    # ch.voev.nova.inventory.api.masterdata.VehicleResponse
    VehicleResponse:
      type: object
      additionalProperties: false
      properties:
        warnings:
          type: array
          items:
            $ref: '../inventory-booking-api.yaml#/components/schemas/Warning'
        vehicles:
          type: array
          items:
            $ref: '#/components/schemas/Vehicle'

    # ch.voev.nova.inventory.api.masterdata.Vehicle
    Vehicle:
      type: object
      additionalProperties: false
      required:
        - validities
        - id
        - lastModified
        - vehicleNumber
        - operatorRef
      properties:
        validities:
          type: array
          items:
            $ref: '#/components/schemas/TemporalValidity'
          minItems: 1
        id:
          type: string
          nullable: false
        lastModified:
          type: string
          format: date-time
          nullable: false
        vehicleNumber:
          type: integer
          format: int32
          nullable: false
          example: '565'
        operatorRef:
          type: string
          nullable: false
          example: 'urn:sbb:1185:11'

    # ch.voev.nova.inventory.api.masterdata.TemporalValidity
    TemporalValidity:
      type: object
      additionalProperties: false
      description: >-
        Defines a validity range for a given item.
      required:
        - validFrom
        - validUntil
      properties:
        validFrom:
          type: string
          format: date
          nullable: false
        validUntil:
          type: string
          format: date
          nullable: false

    # ch.voev.nova.inventory.api.masterdata.ProductDefinitionResponse
    ProductDefinitionResponse:
      type: object
      additionalProperties: false
      properties:
        warnings:
          type: array
          items:
            $ref: '../inventory-booking-api.yaml#/components/schemas/Warning'
        productDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/ProductDefinition'

    # ch.voev.nova.inventory.api.masterdata.ProductDefinition
    ProductDefinition:
      type: object
      additionalProperties: false
      description: >-
        Structured description of the product, its name, comfort and sales / after-sales conditions
      required:
        - validities
        - id
        - summary
        - family
        - type
        - code
        - description
        - conditions
        - fulfillmentOptions
      properties:
        validities:
          type: array
          items:
            $ref: '#/components/schemas/TemporalValidity'
          minItems: 1
        id:
          description: >-
            unique id of this product on this server.
          type: string
          nullable: false
        summary:
          description: >-
            Internal product description.
          type: string
          nullable: false
          example: 'TGV Lyria Loisir 2'
        family:
          description: >-
            The name of the family the product belongs to.
            E.g. all "product variants" can be part of the same family.
          type: string
          nullable: false
        type:
          $ref: '#/components/schemas/ProductType'
        code:
          description: >-
            The product code expressed in the provider system (could be a
            mapping from an even lower-level provider).
          type: string
          nullable: false
          example: 'PT00AD'
        description:
          $ref: '#/components/schemas/Text'
        conditions:
          description: >-
            Structured description of the sales or after-sales conditions.
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          minItems: 1
        accommodationType:
          $ref: '../inventory-booking-api.yaml#/components/schemas/AccommodationType'
        accommodationSubType:
          $ref: '../inventory-booking-api.yaml#/components/schemas/AccommodationSubType'
        serviceClass:
          $ref: '#/components/schemas/ServiceClass'
        comfortClass:
          $ref: '../inventory-booking-api.yaml#/components/schemas/ComfortClass'
        tariff:
          description: >-
            Mapping to Tariff 42 of IRS-90918-3 (Hermes/Hosa). Helps the H2O converter in mapping
            offers to a requested tariff. See legacyReservationParameter.tariff in OSDM offline.
          type: string
        isTrainBound:
          type: boolean
          default: false
        isReturnProduct:
          type: boolean
          default: false
        fulfillmentOptions:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentOption'
          minItems: 1


    # ch.voev.nova.inventory.api.masterdata.ProductType
    ProductType:
      description: >-
        Coarse grained categorization of the product type. Used to determine the type of an
        Offer (see "OfferPartType").
      type: string
      enum:
        - ADMISSION
        - RESERVATION
        - ANCILLARY
        - FEE

    # ch.voev.nova.inventory.api.masterdata.FulfillmentOption
    FulfillmentOption:
      type: object
      additionalProperties: false
      description: >-
        CIT paper implies printing on value paper which is stock controlled.
      required:
        - type
      properties:
        type:
          $ref: '../inventory-booking-api.yaml#/components/schemas/FulfillmentType'
        media:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentMediaType'

    # ch.voev.nova.inventory.api.masterdata.Condition
    Condition:
      type: object
      additionalProperties: false
      description: >-
        Describes sales and after sales conditions applicable to the product.
        For a product to be refundable or exchangeable, at least one refund or exchange
        (respectively) condition must be present.
      required:
        - type
        - description
      properties:
        type:
          $ref: '#/components/schemas/ConditionType'
        description:
          $ref: '#/components/schemas/Text'


    # ch.voev.nova.inventory.api.masterdata.ConditionType
    ConditionType:
      type: string
      x-extensible-enum:
        - SALE
        - PLACE_CHANGE
        - FULFILLMENT
        - EXCHANGE
        - REFUND
        - TRAVEL

    # ch.voev.nova.inventory.api.masterdata.ServiceClass
    ServiceClass:
      type: object
      additionalProperties: false
      description: >-
        Class of service.
      required:
        - type
        - name
      properties:
        type:
          $ref: '#/components/schemas/ServiceClassType'
        name:
          description: >-
            The name the carrier itself uses to designate this specific service class.
          type: string
          nullable: false


    # ch.voev.nova.inventory.api.masterdata.ServiceClassType
    ServiceClassType:
      description: >-
        Type of quality level, finer grained than the comfort class.
      type: string
      x-extensible-enum:
        - BEST
        - HIGH
        - STANDARD
        - BASIC


    # ch.voev.nova.inventory.api.masterdata.FulfillmentMediaType
    FulfillmentMediaType:
      description: >-
        Fulfillment types. RCT2, RCCST and UIC-PDF are official UIC standards.
      type: string
      x-extensible-enum:
        - RCT2
        - RCCST
        - UIC_PDF
        - PDF_A4
        - PKPASS
        - TICKETLESS

    # ch.voev.nova.inventory.api.masterdata.Text
    Text:
      type: object
      additionalProperties: false
      description: >-
        Directly included text in case of online services. Text must be encoded in
        UTF-8 format.
      required:
        - id
        - text
      properties:
        id:
          type: string
          nullable: false
        translations:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
        text:
          type: string
          nullable: false
        shortText:
          type: string

    # ch.voev.nova.inventory.api.masterdata.Translation
    Translation:
      type: object
      additionalProperties: false
      required:
        - language
        - text
      properties:
        language:
          description: >-
            language code following RFC2616-sec14.4
          type: string
          nullable: false
          example: 'en'
        text:
          type: string
          nullable: false
        shortText:
          type: string

