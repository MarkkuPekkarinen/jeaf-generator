import uml;
import JMM;

extension java::Naming;
extension java::GeneratorCommons;
extension java::OpenAPIFunctions;
extension jeaf::RESTFunctions;

// Checks for stereotype RESTResource
context RESTResource if runChecks("RESTResource") ERROR this.getErrorMessage("9104", {name}): this.hasValidRESTResourcePath() == true;


// Checks for stereotype RESTOperation
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9105", {((NamedElement)owner).name + "." + name}): this.hasValidRESTResourcePath() == true;
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9106", {((NamedElement)owner).name + "." + name}): this.hasValidOperationPath() == true;
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9107", {((NamedElement)owner).name + "." + name}): httpMethods.size > 0;
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9108", {this.statusCode.name}): isJAXRSStatusCode(this.statusCode.name) == true;
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9109", {((NamedElement)owner).name + "." + name}): unifyMediaTypes(((JMM::RESTResource)this.owner).consumes, this.consumes).size > 0;
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9110", {((NamedElement)owner).name + "." + name}): unifyMediaTypes(((JMM::RESTResource)this.owner).produces, this.produces).size > 0;
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9111", {((NamedElement)owner).name + "." + name}): this.areAllInputParametersNamed() == true;
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9112", {((NamedElement)owner).name + "." + name, this.getBodyParamNames().toString()}): this.getBodyParamNames().size < 2 ;
context RESTOperation if runChecks("RESTOperation") ERROR   this.getErrorMessage("9113", {((NamedElement)owner).name + "." + name, httpMethods.toString()}): this.hasUnsupportedRequestBody() == false ;
context RESTOperation if runChecks("RESTOperation") WARNING this.getWarningMessage("9101", {((NamedElement)owner).name + "." + name, this.getOpenAPIIncomaptibleParameterTypes().asParamErrorMessage().toString()}): this.getOpenAPIIncomaptibleParameterTypes().size == 0;


// Global checks for OpenAPI3Specification
context Model if runChecks() ERROR this.getErrorMessage("9114", {}): this.hasValidOneGlobalDefaultErrorResponse() == false;
// Check is no longer correct
//context OpenAPI3Specification if runChecks("OpenAPI3Specification") ERROR "Error: <<OpenAPI3Specification>> " + this.name + " has " + this.getCustomResponses().size + " error responses.": this.getCustomResponses().size < 2;


// Checks for stereotype OpenAPIResponse
context OpenAPIResponse if runChecks("OpenAPIResponse") ERROR this.getErrorMessage("9115", {name}): this.getResponseTypes().size == 1;

// Checks for stereotype OpenAPIType
context OpenAPIType if runChecks("OpenAPIType") ERROR this.getErrorMessage("9124", {"OpenAPIType", name}): ownedAttribute.forAll( a | a.type != null);
context OpenAPIType if runChecks("OpenAPIType") ERROR this.getErrorMessage("9125", {"OpenAPIType", name}): ownedAttribute.forAll( a | a.name.length > 0);

context OpenAPIType if runChecks("OpenAPIType") WARNING this.getWarningMessage("9122", {"OpenAPIType", name}): ownedComment.size  > 0;


// Checks for stereotype OpenAPIDataType
context OpenAPIDataType if runChecks("OpenDataAPIType") ERROR this.getErrorMessage("9124", {"OpenAPIDataType", name}): ownedAttribute.forAll( a | a.type != null);
context OpenAPIDataType if runChecks("OpenAPIDataType") && this.compositeDataType == false ERROR this.getErrorMessage("9116", {name}): this.ownedAttribute.size == 1;
context OpenAPIDataType if runChecks("OpenAPIDataType") && this.compositeDataType == false ERROR this.getErrorMessage("9117", {name}): this.ownedAttribute.get(0).type.isBasicOpenAPIType() == true;
context OpenAPIDataType if runChecks("OpenAPIDataType") && this.compositeDataType == false ERROR this.getErrorMessage("9118", {name}): this.ownedAttribute.get(0).isMultivalued() == false;
context OpenAPIDataType if runChecks("OpenAPIDataType") ERROR this.getErrorMessage("9119", {name}): this.superClass.size == 0;

context OpenAPIDataType if runChecks("OpenAPIDataType") WARNING this.getWarningMessage("9122", {"OpenAPIDataType", name}): ownedComment.size  > 0;


// Checks for stereotype PathParam
context PathParam if runChecks("PathParam") ERROR this.getErrorMessage("9120", {this.fqn()}): this.lower == 1;
context PathParam if runChecks("PathParam") ERROR this.getErrorMessage("9120", {this.fqn()}): this.isMultivalued() == false;


// Checks for stereotype BeanParam
context BeanParam if runChecks("RESTOperation") WARNING this.getWarningMessage("9103", {this.fqn(), this.getOpenAPIIncompatibleBeanProperties().asPropertyErrorMessage().toString()}): this.getOpenAPIIncompatibleBeanProperties().size == 0;