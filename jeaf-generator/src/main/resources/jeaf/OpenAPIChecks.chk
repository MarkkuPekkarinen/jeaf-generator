import uml;
import JMM;

extension java::Naming;
extension java::GeneratorCommons;
extension java::OpenAPIFunctions;


context RESTOperation if runChecks("RESTOperation") ERROR "Error: <<RESTOperation>> " + this.getOwningClass().fqn() + "." + name + "(...) must define at least one HTTP-Method. Please correct your UML model.": httpMethods.size > 0;
context RESTOperation if runChecks("RESTOperation") ERROR "Error: REST-Operation uses http status code " + this.statusCode.name + " which is not compatible with JAX-RS": isJAXRSStatusCode(this.statusCode.name) == true;

context Model if runChecks() ERROR "Error: OpenAPI Specification more than one global default error response": this.hasValidOneGlobalDefaultErrorResponse() == false;

context ErrorResponse if runChecks("ErrorResponse") ERROR "Error: <<ErrorResponse>> " + this.name + " needs to define exactly one reference to <<OpenAPIType>> that is used as response type.": this.getErrorResponseTypes().size == 1;

context OpenAPI3Specification if runChecks("OpenAPI3Specification") ERROR "Error: <<OpenAPI3Specification>> " + this.name + " has " + this.getCustomErrorResponses().size + " error responses.": this.getCustomErrorResponses().size < 2;

context OpenAPIDataType if runChecks("OpenAPIDataType") ERROR "Error: <<OpenAPIDataType>> " + this.name + " must have excatly one property." : this.ownedAttribute.size == 1;
context OpenAPIDataType if runChecks("OpenAPIDataType") ERROR "Error: <<OpenAPIDataType>> " + this.name + " must have only properties with primitive types.": this.ownedAttribute.get(0).type.isBasicOpenAPIType() == true;
context OpenAPIDataType if runChecks("OpenAPIDataType") ERROR "Error: <<OpenAPIDataType>> " + this.name + " must not have multivalued properties.": this.ownedAttribute.get(0).isMultivalued() == false;
