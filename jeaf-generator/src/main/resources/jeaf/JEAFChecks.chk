import uml;
import JMM;

extension java::Naming;
extension entity::ModelProperties; 
extension java::ActivityHelper;
extension java::GeneratorCommons;
extension java::OpenAPIFunctions;


context Model if this.getAllAppliedProfiles().allOwnedElements().typeSelect(ModelVersion).size > 0 ERROR "Error: JEAF Generator expects JEAF Meta Model (JMM) revision 71 or higher. Please update your UML project to a newer version of JMM. Your current revision is: " + this.getAllAppliedProfiles().allOwnedElements().typeSelect(ModelVersion).get(0).revision: this.getAllAppliedProfiles().allOwnedElements().typeSelect(ModelVersion).get(0).revision >= 71;

context JEAFComponent if runChecks("JEAFComponent") ERROR "Error: No layer defined for JEAF Component " + this.name : layer != null;

context ServiceObject if runChecks("ServiceObject") ERROR "Error: <<ServiceObject>> " + name + " has attribute(s) without a type (" + fqn() + ")": ownedAttribute.forAll( a | a.type != null);
context ServiceObject if runChecks("ServiceObject") ERROR "Error: <<ServiceObject>> " + name + " has attribute(s) or association(s) without a name (" + fqn() + ")": ownedAttribute.forAll( a | a.name != null);
context ServiceObject if runChecks("ServiceObject") && compositeDataType == true ERROR this.getErrorMessage("9123", {"ServiceObject", name}): this.superClass.size == 0;

context POJO if runChecks("POJO") ERROR "Error: <<POJO>> " + name + " has attribute(s) without a type (" + fqn() + ")": ownedAttribute.forAll( a | a.type != null);
context POJO if runChecks("POJO") ERROR "Error: <<POJO>> " + name + " has attribute(s) or association(s) without a name (" + fqn() + ")": ownedAttribute.forAll( a | a.name != null);
context POJO if runChecks("POJO") && compositeDataType == true ERROR this.getErrorMessage("9123", {"POJO", name}): this.superClass.size == 0;

context OpenAPIType if runChecks("OpenAPIType") ERROR "Error: <<OpenAPIType>> " + name + " has attribute(s) without a type (" + fqn() + ")": ownedAttribute.forAll( a | a.type != null);
context OpenAPIType if runChecks("OpenAPIType") ERROR "Error: <<OpenAPIType>> " + name + " has attribute(s) or association(s) without a name (" + fqn() + ")": ownedAttribute.forAll( a | a.name != null);

context OpenAPIDataType if runChecks("OpenDataAPIType") ERROR "Error: <<OpenAPIDataType>> " + name + " has attribute(s) without a type (" + fqn() + ")": ownedAttribute.forAll( a | a.type != null);

context DomainObject if runChecks("DomainObject") ERROR "Error: <<DomainObject>> " + name + " has attribute(s) without a type (" + fqn() + ")": ownedAttribute.forAll( a | a.type != null);
context DomainObject if runChecks("DomainObject") ERROR "Error: <<DomainObject>> " + name + " has attribute(s) or association(s) without a name (" + fqn() + ")": ownedAttribute.forAll( a | a.name != null);

context PersistentObject if runChecks("PersistentObject") ERROR "Error: <<PersistentObject>> " + name + " has attribute(s) without a type (" + fqn() + ")": ownedAttribute.forAll( a | a.type != null);
context PersistentObject if runChecks("PersistentObject") ERROR "Error: <<PersistentObject>> " + name + " has attribute(s) or association(s) without a name (" + fqn() + ")": ownedAttribute.forAll( a | a.name != null);

context JEAFService if runChecks("JEAFService") ERROR "Error: <<JEAFService>> " + name+ " has method(s) with unsupported return type. Please ensure that all methods have a real return type and that no arrays of primitive types returned (" + fqn() + ")": ownedOperation.forAll( e | e.isSupportedReturnType() == true);
context JEAFService if runChecks("JEAFService") ERROR "Error: <<JEAFService>> " + name+ " has method(s) with input parameters without name. Please ensure that all input parameters are named (" + fqn() + ")": ownedOperation.forAll( e | e.areAllInputParametersNamed() == true);

context ServiceObject if runChecks("ServiceObject") ERROR "Error: <<ServiceObject>> " + name + " has method(s) without a return type. Please ensure that all methods have a return type (" + fqn() + ")": ownedOperation.forAll( e | e.hasReturnType() == true);
context ServiceObject if runChecks("ServiceObject") ERROR "Error: <<ServiceObject>> " + name + " has method(s) without a name. Please ensure that all methods have a name (" + fqn() + ")": ownedOperation.forAll( e | e.name != null);
context ServiceObject if runChecks("ServiceObject") ERROR "Error: <<ServiceObject>> " + name+ " has method(s) with input parameters without name. Please ensure that all input parameters are named (" + fqn() + ")": ownedOperation.forAll( e | e.areAllInputParametersNamed() == true);


context DomainObject if runChecks("DomainObject") ERROR "Error: <<DomainObject>> " + name + " has method(s) without a return type. Please ensure that all methods have a return type (" + fqn() + ")": ownedOperation.forAll( e | e.hasReturnType() == true);
context DomainObject if runChecks("DomainObject") ERROR "Error: <<DomainObject>> " + name + " has method(s) without a name. Please ensure that all methods have a name (" + fqn() + ")": ownedOperation.forAll( e | e.name != null);
context DomainObject if runChecks("DomainObject") ERROR "Error: <<DomainObject>> " + name+ " has method(s) with input parameters without name. Please ensure that all input parameters are named (" + fqn() + ")": ownedOperation.forAll( e | e.areAllInputParametersNamed() == true);


context PersistentObject if runChecks("PersistentObject") ERROR "Error: <<PersistentObject>> " + name + " has method(s) without a return type. Please ensure that all methods have a return type (" + fqn() + ")": ownedOperation.forAll( e | e.hasReturnType() == true);
context PersistentObject if runChecks("PersistentObject") ERROR "Error: <<PersistentObject>> " + name + " has method(s) without a name. Please ensure that all methods have a name (" + fqn() + ")": ownedOperation.forAll( e | e.name != null);
context PersistentObject if runChecks("PersistentObject") ERROR "Error: <<PersistentObject>> " + name+ " has method(s) with input parameters without name. Please ensure that all input parameters are named (" + fqn() + ")": ownedOperation.forAll( e | e.areAllInputParametersNamed() == true);

context Operation if runChecks() ERROR "Error: Method " + name + " has parameter(s) without type.": hasOnlySupportedParamaterTypes() == true;
context Operation if runChecks() ERROR "Error: Method " + name + " (...) of class " + ((NamedElement)this.owner).fqn() + " does not have a valid return type": hasReturnType() == true;

context ServiceObject if runChecks("ServiceObject") WARNING this.getWarningMessage("9122", {"ServiceObject", name}): ownedComment.size  > 0;
context POJO if runChecks("POJO") WARNING this.getWarningMessage("9122", {"POJO", name}): ownedComment.size  > 0;

context JEAFEnumeration if runChecks("JEAFEnumeration") WARNING this.getWarningMessage("9122", {"JEAFEnumeration", name}): ownedComment.size  > 0;
context DomainObject if runChecks("DomainObject") WARNING this.getWarningMessage("9122", {"DomainObject", name}): ownedComment.size  > 0;
context QueryObject if runChecks("QueryObject") WARNING this.getWarningMessage("9122", {"QueryObject", name}): ownedComment.size  > 0;
context JEAFService if runChecks("JEAFService") WARNING this.getWarningMessage("9122", {"JEAFService", name}): ownedComment.size  > 0;
context OpenAPIType if runChecks("OpenAPIType") WARNING this.getWarningMessage("9122", {"OpenAPIType", name}): ownedComment.size  > 0;

context JEAFActivity if runChecks("JEAFActivity") ERROR "Error: <<JEAFActivity>> must define exactly one return parameter " + name + " (" + fqn() + "). Activity has " + this.getReturnParameterCount()+ " return parameters.": this.getReturnParameterCount()  == 1;
