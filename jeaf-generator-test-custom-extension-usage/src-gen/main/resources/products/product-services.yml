openapi: 3.0.3

info:
  title: Product Services
  version: 1.6.48-SNAPSHOT
  description: >-
    This component represents the OpenAPI interface of the accounting service.
    
    Dear Developers, please be aware that multi line comments can also be used.
  termsOfService: https://www.anaptecs.de/jeaf/TermsOfUse
  contact:
    name: JEAF Development Team
    url: 'https://www.anaptecs.de/jeaf'
    email: jeaf@anaptecs.de
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: https://accounting.jeaf.de
  - url: http://localhost:8080/test
  - url: https://demo-jeaf.anaptecs.de
  - url: https://test-jeaf.anaptecs.de
  - url: https://jeaf.anaptecs.de
    description: >-
      This is our lovely production environment
      
      It can stand any load, until it crashes ;-)

tags:
  - name: Products
    description: >-
      Tag groups all product related operations together.
      url: https//jeaf.anaptecs.de/link1
  - name: MasterData
    description: >-
      Tag marks all operations that are connected with Master Data.
  - name: Another Tag
  - name: B Tag

paths:
  # ProductService
  /products:
    get:
      tags:
        - MasterData
        - Products
      description: >-
        Operation returns all available product.
      operationId: getProducts
      externalDocs:
        url: https://jeaf.anaptecs.de/link2
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../base/product-base.yml#/components/schemas/Product'
                minItems: 0
          headers:
            Cache-Control:
              schema:
                type: string
                default: 'public, max-age=10000'
                description: >-
                  Results for this call are cacheable for the duration as it is defined in this header field
            Max-TTL:
              schema:
                type: integer
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
            Yet-Another-Header:
              schema:
                type: boolean
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

    post:
      tags:
        - Products
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../base/product-base.yml#/components/schemas/Product'
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: boolean
                example: true
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

    head:
      operationId: ping
      responses:
        '204':
          $ref: '#/components/responses/NoContentResponse'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/{id}:
    get:
      tags:
        - MasterData
        - Products
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            default: 4711
            example: 1234-345
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/Product'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/sortiment/{id}:
    get:
      tags:
        - MasterData
        - Products
      operationId: getSortiment
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: lang
          in: header
          required: true
          schema:
            type: string
            example: en
        - name: reseller
          in: cookie
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: q1
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/Sortiment'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/ChannelCode:
    post:
      operationId: createChannelCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example: MOBILE_APP
          application/xml:
            schema:
              type: string
              example: MOBILE_APP
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
                default: 'WEBSHOP'
                example: MOBILE_APP
                nullable: false
            application/xml:
              schema:
                type: string
                default: 'WEBSHOP'
                example: MOBILE_APP
                nullable: false
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/deprecated/operation:
    get:
      operationId: deprecatedOperation
      deprecated: true
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/deprecated/context:
    post:
      operationId: deprecatedContext
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: lang
          in: header
          required: true
          schema:
            type: string
            example: en
        - name: reseller
          in: cookie
          required: true
          schema:
            type: integer
            format: int64
        - name: q1
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/deprecated/beanParams:
    post:
      operationId: deprecatedBeanParam
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: lang
          in: header
          required: true
          schema:
            type: string
        - name: q2
          in: query
          required: true
          deprecated: true
          schema:
            type: string
      responses:
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/deprecated/params:
    post:
      operationId: deprecatedParams
      parameters:
        - name: param1
          in: header
          required: true
          deprecated: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
                deprecated: true
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/deprecated/body:
    post:
      operationId: deprecatedBody
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              deprecated: true
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/deprecated/complexBody:
    post:
      description: >-
        Please be aware that deprecations on complex bodies are not supported. Instead the whole operation needs to be set to deprecated.
      operationId: deprectedComplexRequestBody
      requestBody:
        description: >-
          
          Operation has deprected body parameter. Please be aware that deprecations on complex bodies are not supported. Instead the whole operation needs to be set to deprecated.
        required: true
        content:
          application/json:
            schema:
              $ref: '../base/product-base.yml#/components/schemas/Product'
      responses:
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/deprecated/complexReturn:
    get:
      operationId: deprecatedComplexReturn
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
            Operation has deprected return type. Please be aware that deprecations on complex return types are not supported. Instead the whole operation needs to be set to deprecated.
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/Product'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/specific/{id}:
    patch:
      operationId: loadSpecificThings
      parameters:
        - name: specificHeader
          in: header
          required: true
          schema:
            type: string
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: lang
          in: header
          required: true
          schema:
            type: string
            example: en
        - name: reseller
          in: cookie
          required: true
          schema:
            type: integer
            format: int64
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: q1
          in: query
          required: true
          schema:
            type: string
      responses:
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/ChannelCodeObject:
    post:
      operationId: createChannelCodeFromObject
      requestBody:
        description: >-
          Channel Code that should be created.
        required: true
        content:
          application/json:
            schema:
                type: string
                default: 'WEBSHOP'
                example: MOBILE_APP
                nullable: false
      responses:
        '200':
          description: >-
            Created channel code
          content:
            application/json:
              schema:
                type: string
                default: 'WEBSHOP'
                example: MOBILE_APP
                nullable: false
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/currencies:
    post:
      tags:
        - B Tag
      operationId: addCurrencies
      requestBody:
        required: true
        content:
          application/json:
            schema:
                description: >-
                  ISO 4217 currency code.
                type: array
                items:
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: CHF
                minItems: 1
                nullable: false
                example: ["CHF", "EUR", "USD"]
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                description: >-
                  ISO 4217 currency code.
                type: array
                items:
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: CHF
                minItems: 1
                nullable: false
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/currencies/valid:
    post:
      tags:
        - Another Tag
      operationId: isCurrencySupported
      requestBody:
        required: true
        content:
          application/json:
            schema:
                description: >-
                  ISO 4217 currency code.
                type: string
                default: 'CHF'
                minLength: 3
                maxLength: 3
                example: CHF
                nullable: false
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                description: >-
                  ISO 4217 currency code.
                type: string
                default: 'CHF'
                minLength: 3
                maxLength: 3
                example: CHF
                nullable: false
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/codeTypeUsages:
    post:
      operationId: testCodeTypeUsage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../base/product-base.yml#/components/schemas/StringCodeType'
      responses:
        '202':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/IntegerCodeType'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products//LocalBeanParam:
    get:
      operationId: testLocalBeanParamType
      parameters:
        - $ref: '#/components/parameters/localKey'
        - $ref: '#/components/parameters/localID'
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products//ExternalBeanParam:
    get:
      operationId: testExternalBeanParameterType
      parameters:
        - $ref: '../base/product-base.yml#/components/parameters/novaKey'
        - $ref: '../base/product-base.yml#/components/parameters/tkID'
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products//ChildBeanParam:
    get:
      operationId: testChildBeanParameter
      parameters:
        - $ref: '#/components/parameters/childProperty'
        - $ref: '../base/product-base.yml#/components/parameters/novaKey'
        - $ref: '../base/product-base.yml#/components/parameters/tkID'
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: string
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/IBAN:
    post:
      operationId: checkIBAN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              pattern: '^DE\d{2}\s?([0-9a-zA-Z]{4}\s?){4}[0-9a-zA-Z]{2}$'
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: boolean
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/channels:
    get:
      operationId: getChannels
      parameters:
        - name: channelTypes
          in: query
          schema:
            type: array
            default: [MOBILE]
            items:
              type: string
              enum:
                - COUNTER
                - CALL_CENTER
                - MOBILE
                - TVM
                - WEB
                # Literal "LEGACY_POS" is marked as deprecated. However OpenAPI does not support to mark literals as deprecated. 
                - LEGACY_POS
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../base/product-base.yml#/components/schemas/Channel'
                minItems: 0
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'

  /products/DefaultChannel:
    get:
      operationId: getDefaultChannel
      parameters:
        - name: channelType
          in: query
          required: true
          schema:
            type: string
            default: COUNTER
            enum:
              - COUNTER
              - CALL_CENTER
              - MOBILE
              - TVM
              - WEB
              # Literal "LEGACY_POS" is marked as deprecated. However OpenAPI does not support to mark literals as deprecated. 
              - LEGACY_POS
      responses:
        '200':
          description: >-
            TODO: Please add comment for response
          content:
            application/json:
              schema:
                $ref: '../base/product-base.yml#/components/schemas/Channel'
          headers:
            X-Global-Response-Header:
              schema:
                type: string
                default: 'Hello World'
        '400':
          $ref: '#/components/responses/CustomErrorResponse'
        'default':
          $ref: '#/components/responses/CustomErrorResponse'


security:
  - {}
  - MyOAuthSecuritySchema: [read:pets,write:pets]

components:
  securitySchemes:
    MyOAuthSecuritySchema:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://example.com/api/oauth/dialog'
          tokenUrl: 'https://example.com/api/oauth/dialog'
          refreshUrl: 'https://example.com/api/oauth/dialog'
          scopes: 
            read:pets: Read pets data
            write:pets: Modify pets

        implicit:
          authorizationUrl: 'https://example.com/api/oauth/dialog'
          tokenUrl: 'TODO Please add required token URL'
          refreshUrl: 'https://example.com/api/oauth/dialog'
          scopes: 
            read:pets: Read pets data
            write:pets: Modify pets

  parameters:
    # com.anaptecs.jeaf.junit.openapi.service1.ChildBeanParameterType.childProperty
    childProperty:
      name: X-Child-Property
      in: header
      schema:
        type: string
      required: true

    # com.anaptecs.jeaf.junit.openapi.service1.LocalBeanParamType.localID
    localID:
      name: localID
      in: header
      schema:
        type: string
      required: true

    # com.anaptecs.jeaf.junit.openapi.service1.LocalBeanParamType.localKey
    localKey:
      name: localKey
      in: header
      schema:
        type: string
      required: true

  responses:
    # com.anaptecs.jeaf.junit.openapi.service1.CustomErrorResponse
    CustomErrorResponse:
      description: TODO Please add comment to error response type
      content:
        text/plain:
          schema:
            $ref: '../base/product-base.yml#/components/schemas/Problem'

    # com.anaptecs.jeaf.junit.openapi.service1.NoContentResponse
    NoContentResponse:
      description: TODO Please add comment to error response type
      content:
        application/json:
          schema:
            $ref: '../base/product-base.yml#/components/schemas/Problem'


  schemas:
    # com.anaptecs.jeaf.junit.openapi.service1.Sale
    Sale:
      type: object
      additionalProperties: false
      description: >-
        Chännel
        €
        Ö
      required:
        - transactionAmount
      properties:
        transactionAmount:
          type: number
          format: double
          nullable: false
        sale:
          $ref: '../base/product-base.yml#/components/schemas/Channel'

      
      
