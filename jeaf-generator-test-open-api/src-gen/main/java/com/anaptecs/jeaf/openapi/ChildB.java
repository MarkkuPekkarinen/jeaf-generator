/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service. 
 *
 * OpenAPI spec version: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.anaptecs.jeaf.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.anaptecs.jeaf.openapi.ParentClass;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * ChildB
 */


public class ChildB extends ParentClass {
  @JsonProperty("childBAttribute")
  private Boolean childBAttribute = null;

  @JsonProperty("composition")
  private List<ParentClass> composition = null;

  public ChildB childBAttribute(Boolean childBAttribute) {
    this.childBAttribute = childBAttribute;
    return this;
  }

   /**
   * Get childBAttribute
   * @return childBAttribute
  **/
  @Schema(required = true, description = "")
  public Boolean isChildBAttribute() {
    return childBAttribute;
  }

  public void setChildBAttribute(Boolean childBAttribute) {
    this.childBAttribute = childBAttribute;
  }

  public ChildB composition(List<ParentClass> composition) {
    this.composition = composition;
    return this;
  }

  public ChildB addCompositionItem(ParentClass compositionItem) {
    if (this.composition == null) {
      this.composition = new ArrayList<>();
    }
    this.composition.add(compositionItem);
    return this;
  }

   /**
   * Get composition
   * @return composition
  **/
  @Schema(description = "")
  public List<ParentClass> getComposition() {
    return composition;
  }

  public void setComposition(List<ParentClass> composition) {
    this.composition = composition;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChildB childB = (ChildB) o;
    return Objects.equals(this.childBAttribute, childB.childBAttribute) &&
        Objects.equals(this.composition, childB.composition) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(childBAttribute, composition, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChildB {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    childBAttribute: ").append(toIndentedString(childBAttribute)).append("\n");
    sb.append("    composition: ").append(toIndentedString(composition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
