/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.anaptecs.jeaf.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * CodeTypeUsageTest
 */


public class CodeTypeUsageTest {
  @JsonProperty("booleanCode")
  private Boolean booleanCode = null;

  @JsonProperty("booleanCodeAssociation")
  private List<Boolean> booleanCodeAssociation = null;

  @JsonProperty("shortCodeTypeAssociation")
  private List<Integer> shortCodeTypeAssociation = new ArrayList<>();

  @JsonProperty("stringCode")
  private String stringCode = null;

  @JsonProperty("shortCode")
  private Integer shortCode = null;

  public CodeTypeUsageTest booleanCode(Boolean booleanCode) {
    this.booleanCode = booleanCode;
    return this;
  }

   /**
   * Get booleanCode
   * @return booleanCode
  **/
  @Schema(required = true, description = "")
  public Boolean getBooleanCode() {
    return booleanCode;
  }

  public void setBooleanCode(Boolean booleanCode) {
    this.booleanCode = booleanCode;
  }

  public CodeTypeUsageTest booleanCodeAssociation(List<Boolean> booleanCodeAssociation) {
    this.booleanCodeAssociation = booleanCodeAssociation;
    return this;
  }

  public CodeTypeUsageTest addBooleanCodeAssociationItem(Boolean booleanCodeAssociationItem) {
    if (this.booleanCodeAssociation == null) {
      this.booleanCodeAssociation = new ArrayList<>();
    }
    this.booleanCodeAssociation.add(booleanCodeAssociationItem);
    return this;
  }

   /**
   * Get booleanCodeAssociation
   * @return booleanCodeAssociation
  **/
  @Schema(description = "")
  public List<Boolean> getBooleanCodeAssociation() {
    return booleanCodeAssociation;
  }

  public void setBooleanCodeAssociation(List<Boolean> booleanCodeAssociation) {
    this.booleanCodeAssociation = booleanCodeAssociation;
  }

  public CodeTypeUsageTest shortCodeTypeAssociation(List<Integer> shortCodeTypeAssociation) {
    this.shortCodeTypeAssociation = shortCodeTypeAssociation;
    return this;
  }

  public CodeTypeUsageTest addShortCodeTypeAssociationItem(Integer shortCodeTypeAssociationItem) {
    this.shortCodeTypeAssociation.add(shortCodeTypeAssociationItem);
    return this;
  }

   /**
   * Get shortCodeTypeAssociation
   * @return shortCodeTypeAssociation
  **/
  @Schema(required = true, description = "")
  public List<Integer> getShortCodeTypeAssociation() {
    return shortCodeTypeAssociation;
  }

  public void setShortCodeTypeAssociation(List<Integer> shortCodeTypeAssociation) {
    this.shortCodeTypeAssociation = shortCodeTypeAssociation;
  }

  public CodeTypeUsageTest stringCode(String stringCode) {
    this.stringCode = stringCode;
    return this;
  }

   /**
   * Get stringCode
   * @return stringCode
  **/
  @Schema(required = true, description = "")
  public String getStringCode() {
    return stringCode;
  }

  public void setStringCode(String stringCode) {
    this.stringCode = stringCode;
  }

  public CodeTypeUsageTest shortCode(Integer shortCode) {
    this.shortCode = shortCode;
    return this;
  }

   /**
   * Get shortCode
   * maximum: 4711
   * @return shortCode
  **/
  @Schema(required = true, description = "")
  public Integer getShortCode() {
    return shortCode;
  }

  public void setShortCode(Integer shortCode) {
    this.shortCode = shortCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CodeTypeUsageTest codeTypeUsageTest = (CodeTypeUsageTest) o;
    return Objects.equals(this.booleanCode, codeTypeUsageTest.booleanCode) &&
        Objects.equals(this.booleanCodeAssociation, codeTypeUsageTest.booleanCodeAssociation) &&
        Objects.equals(this.shortCodeTypeAssociation, codeTypeUsageTest.shortCodeTypeAssociation) &&
        Objects.equals(this.stringCode, codeTypeUsageTest.stringCode) &&
        Objects.equals(this.shortCode, codeTypeUsageTest.shortCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(booleanCode, booleanCodeAssociation, shortCodeTypeAssociation, stringCode, shortCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CodeTypeUsageTest {\n");
    
    sb.append("    booleanCode: ").append(toIndentedString(booleanCode)).append("\n");
    sb.append("    booleanCodeAssociation: ").append(toIndentedString(booleanCodeAssociation)).append("\n");
    sb.append("    shortCodeTypeAssociation: ").append(toIndentedString(shortCodeTypeAssociation)).append("\n");
    sb.append("    stringCode: ").append(toIndentedString(stringCode)).append("\n");
    sb.append("    shortCode: ").append(toIndentedString(shortCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
