/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.anaptecs.jeaf.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * PrimitiveObjectWithRestrictions
 */


public class PrimitiveObjectWithRestrictions {
  @JsonProperty("aBoolean")
  private Boolean aBoolean = null;

  @JsonProperty("bBoolean")
  private Boolean bBoolean = null;

  @JsonProperty("cBoolean")
  private Boolean cBoolean = null;

  @JsonProperty("aByte")
  private Integer aByte = null;

  @JsonProperty("bByte")
  private Integer bByte = null;

  @JsonProperty("aShort")
  private Integer aShort = null;

  @JsonProperty("bShort")
  private Integer bShort = null;

  @JsonProperty("aInteger")
  private Integer aInteger = null;

  @JsonProperty("bInteger")
  private Integer bInteger = null;

  @JsonProperty("cInteger")
  private Integer cInteger = null;

  @JsonProperty("aLong")
  private Long aLong = null;

  @JsonProperty("bLong")
  private Long bLong = null;

  @JsonProperty("aBigInteger")
  private Long aBigInteger = null;

  @JsonProperty("aCharacter")
  private String aCharacter = null;

  @JsonProperty("bCharacter")
  private String bCharacter = null;

  @JsonProperty("aFloat")
  private Float aFloat = null;

  @JsonProperty("bFloat")
  private Float bFloat = null;

  @JsonProperty("aDouble")
  private Double aDouble = null;

  @JsonProperty("bDouble")
  private Double bDouble = null;

  @JsonProperty("aBigDecimal")
  private Double aBigDecimal = null;

  @JsonProperty("aString")
  private String aString = null;

  @JsonProperty("bString")
  private String bString = null;

  public PrimitiveObjectWithRestrictions aBoolean(Boolean aBoolean) {
    this.aBoolean = aBoolean;
    return this;
  }

   /**
   * Get aBoolean
   * @return aBoolean
  **/
  @Schema(required = true, description = "")
  public Boolean isABoolean() {
    return aBoolean;
  }

  public void setABoolean(Boolean aBoolean) {
    this.aBoolean = aBoolean;
  }

  public PrimitiveObjectWithRestrictions bBoolean(Boolean bBoolean) {
    this.bBoolean = bBoolean;
    return this;
  }

   /**
   * Get bBoolean
   * @return bBoolean
  **/
  @Schema(description = "")
  public Boolean isBBoolean() {
    return bBoolean;
  }

  public void setBBoolean(Boolean bBoolean) {
    this.bBoolean = bBoolean;
  }

  public PrimitiveObjectWithRestrictions cBoolean(Boolean cBoolean) {
    this.cBoolean = cBoolean;
    return this;
  }

   /**
   * Get cBoolean
   * @return cBoolean
  **/
  @Schema(required = true, description = "")
  public Boolean isCBoolean() {
    return cBoolean;
  }

  public void setCBoolean(Boolean cBoolean) {
    this.cBoolean = cBoolean;
  }

  public PrimitiveObjectWithRestrictions aByte(Integer aByte) {
    this.aByte = aByte;
    return this;
  }

   /**
   * Get aByte
   * maximum: 0
   * @return aByte
  **/
  @Schema(required = true, description = "")
  public Integer getAByte() {
    return aByte;
  }

  public void setAByte(Integer aByte) {
    this.aByte = aByte;
  }

  public PrimitiveObjectWithRestrictions bByte(Integer bByte) {
    this.bByte = bByte;
    return this;
  }

   /**
   * Get bByte
   * maximum: 0
   * @return bByte
  **/
  @Schema(description = "")
  public Integer getBByte() {
    return bByte;
  }

  public void setBByte(Integer bByte) {
    this.bByte = bByte;
  }

  public PrimitiveObjectWithRestrictions aShort(Integer aShort) {
    this.aShort = aShort;
    return this;
  }

   /**
   * Get aShort
   * minimum: -237
   * @return aShort
  **/
  @Schema(required = true, description = "")
  public Integer getAShort() {
    return aShort;
  }

  public void setAShort(Integer aShort) {
    this.aShort = aShort;
  }

  public PrimitiveObjectWithRestrictions bShort(Integer bShort) {
    this.bShort = bShort;
    return this;
  }

   /**
   * Get bShort
   * minimum: 0
   * @return bShort
  **/
  @Schema(description = "")
  public Integer getBShort() {
    return bShort;
  }

  public void setBShort(Integer bShort) {
    this.bShort = bShort;
  }

  public PrimitiveObjectWithRestrictions aInteger(Integer aInteger) {
    this.aInteger = aInteger;
    return this;
  }

   /**
   * Get aInteger
   * minimum: 0
   * @return aInteger
  **/
  @Schema(required = true, description = "")
  public Integer getAInteger() {
    return aInteger;
  }

  public void setAInteger(Integer aInteger) {
    this.aInteger = aInteger;
  }

  public PrimitiveObjectWithRestrictions bInteger(Integer bInteger) {
    this.bInteger = bInteger;
    return this;
  }

   /**
   * Get bInteger
   * minimum: 4711
   * @return bInteger
  **/
  @Schema(description = "")
  public Integer getBInteger() {
    return bInteger;
  }

  public void setBInteger(Integer bInteger) {
    this.bInteger = bInteger;
  }

  public PrimitiveObjectWithRestrictions cInteger(Integer cInteger) {
    this.cInteger = cInteger;
    return this;
  }

   /**
   * Get cInteger
   * minimum: 100
   * maximum: 1000
   * @return cInteger
  **/
  @Schema(description = "")
  public Integer getCInteger() {
    return cInteger;
  }

  public void setCInteger(Integer cInteger) {
    this.cInteger = cInteger;
  }

  public PrimitiveObjectWithRestrictions aLong(Long aLong) {
    this.aLong = aLong;
    return this;
  }

   /**
   * Get aLong
   * @return aLong
  **/
  @Schema(required = true, description = "")
  public Long getALong() {
    return aLong;
  }

  public void setALong(Long aLong) {
    this.aLong = aLong;
  }

  public PrimitiveObjectWithRestrictions bLong(Long bLong) {
    this.bLong = bLong;
    return this;
  }

   /**
   * Get bLong
   * maximum: 299792458
   * @return bLong
  **/
  @Schema(description = "")
  public Long getBLong() {
    return bLong;
  }

  public void setBLong(Long bLong) {
    this.bLong = bLong;
  }

  public PrimitiveObjectWithRestrictions aBigInteger(Long aBigInteger) {
    this.aBigInteger = aBigInteger;
    return this;
  }

   /**
   * Get aBigInteger
   * minimum: -3
   * maximum: 3
   * @return aBigInteger
  **/
  @Schema(description = "")
  public Long getABigInteger() {
    return aBigInteger;
  }

  public void setABigInteger(Long aBigInteger) {
    this.aBigInteger = aBigInteger;
  }

  public PrimitiveObjectWithRestrictions aCharacter(String aCharacter) {
    this.aCharacter = aCharacter;
    return this;
  }

   /**
   * Get aCharacter
   * @return aCharacter
  **/
  @Schema(required = true, description = "")
  public String getACharacter() {
    return aCharacter;
  }

  public void setACharacter(String aCharacter) {
    this.aCharacter = aCharacter;
  }

  public PrimitiveObjectWithRestrictions bCharacter(String bCharacter) {
    this.bCharacter = bCharacter;
    return this;
  }

   /**
   * Get bCharacter
   * @return bCharacter
  **/
  @Schema(description = "")
  public String getBCharacter() {
    return bCharacter;
  }

  public void setBCharacter(String bCharacter) {
    this.bCharacter = bCharacter;
  }

  public PrimitiveObjectWithRestrictions aFloat(Float aFloat) {
    this.aFloat = aFloat;
    return this;
  }

   /**
   * Get aFloat
   * @return aFloat
  **/
  @Schema(required = true, description = "")
  public Float getAFloat() {
    return aFloat;
  }

  public void setAFloat(Float aFloat) {
    this.aFloat = aFloat;
  }

  public PrimitiveObjectWithRestrictions bFloat(Float bFloat) {
    this.bFloat = bFloat;
    return this;
  }

   /**
   * Get bFloat
   * @return bFloat
  **/
  @Schema(description = "")
  public Float getBFloat() {
    return bFloat;
  }

  public void setBFloat(Float bFloat) {
    this.bFloat = bFloat;
  }

  public PrimitiveObjectWithRestrictions aDouble(Double aDouble) {
    this.aDouble = aDouble;
    return this;
  }

   /**
   * Get aDouble
   * @return aDouble
  **/
  @Schema(required = true, description = "")
  public Double getADouble() {
    return aDouble;
  }

  public void setADouble(Double aDouble) {
    this.aDouble = aDouble;
  }

  public PrimitiveObjectWithRestrictions bDouble(Double bDouble) {
    this.bDouble = bDouble;
    return this;
  }

   /**
   * Get bDouble
   * @return bDouble
  **/
  @Schema(description = "")
  public Double getBDouble() {
    return bDouble;
  }

  public void setBDouble(Double bDouble) {
    this.bDouble = bDouble;
  }

  public PrimitiveObjectWithRestrictions aBigDecimal(Double aBigDecimal) {
    this.aBigDecimal = aBigDecimal;
    return this;
  }

   /**
   * Get aBigDecimal
   * minimum: 4711
   * @return aBigDecimal
  **/
  @Schema(description = "")
  public Double getABigDecimal() {
    return aBigDecimal;
  }

  public void setABigDecimal(Double aBigDecimal) {
    this.aBigDecimal = aBigDecimal;
  }

  public PrimitiveObjectWithRestrictions aString(String aString) {
    this.aString = aString;
    return this;
  }

   /**
   * Get aString
   * @return aString
  **/
  @Schema(description = "")
  public String getAString() {
    return aString;
  }

  public void setAString(String aString) {
    this.aString = aString;
  }

  public PrimitiveObjectWithRestrictions bString(String bString) {
    this.bString = bString;
    return this;
  }

   /**
   * Get bString
   * @return bString
  **/
  @Schema(required = true, description = "")
  public String getBString() {
    return bString;
  }

  public void setBString(String bString) {
    this.bString = bString;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrimitiveObjectWithRestrictions primitiveObjectWithRestrictions = (PrimitiveObjectWithRestrictions) o;
    return Objects.equals(this.aBoolean, primitiveObjectWithRestrictions.aBoolean) &&
        Objects.equals(this.bBoolean, primitiveObjectWithRestrictions.bBoolean) &&
        Objects.equals(this.cBoolean, primitiveObjectWithRestrictions.cBoolean) &&
        Objects.equals(this.aByte, primitiveObjectWithRestrictions.aByte) &&
        Objects.equals(this.bByte, primitiveObjectWithRestrictions.bByte) &&
        Objects.equals(this.aShort, primitiveObjectWithRestrictions.aShort) &&
        Objects.equals(this.bShort, primitiveObjectWithRestrictions.bShort) &&
        Objects.equals(this.aInteger, primitiveObjectWithRestrictions.aInteger) &&
        Objects.equals(this.bInteger, primitiveObjectWithRestrictions.bInteger) &&
        Objects.equals(this.cInteger, primitiveObjectWithRestrictions.cInteger) &&
        Objects.equals(this.aLong, primitiveObjectWithRestrictions.aLong) &&
        Objects.equals(this.bLong, primitiveObjectWithRestrictions.bLong) &&
        Objects.equals(this.aBigInteger, primitiveObjectWithRestrictions.aBigInteger) &&
        Objects.equals(this.aCharacter, primitiveObjectWithRestrictions.aCharacter) &&
        Objects.equals(this.bCharacter, primitiveObjectWithRestrictions.bCharacter) &&
        Objects.equals(this.aFloat, primitiveObjectWithRestrictions.aFloat) &&
        Objects.equals(this.bFloat, primitiveObjectWithRestrictions.bFloat) &&
        Objects.equals(this.aDouble, primitiveObjectWithRestrictions.aDouble) &&
        Objects.equals(this.bDouble, primitiveObjectWithRestrictions.bDouble) &&
        Objects.equals(this.aBigDecimal, primitiveObjectWithRestrictions.aBigDecimal) &&
        Objects.equals(this.aString, primitiveObjectWithRestrictions.aString) &&
        Objects.equals(this.bString, primitiveObjectWithRestrictions.bString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aBoolean, bBoolean, cBoolean, aByte, bByte, aShort, bShort, aInteger, bInteger, cInteger, aLong, bLong, aBigInteger, aCharacter, bCharacter, aFloat, bFloat, aDouble, bDouble, aBigDecimal, aString, bString);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrimitiveObjectWithRestrictions {\n");
    
    sb.append("    aBoolean: ").append(toIndentedString(aBoolean)).append("\n");
    sb.append("    bBoolean: ").append(toIndentedString(bBoolean)).append("\n");
    sb.append("    cBoolean: ").append(toIndentedString(cBoolean)).append("\n");
    sb.append("    aByte: ").append(toIndentedString(aByte)).append("\n");
    sb.append("    bByte: ").append(toIndentedString(bByte)).append("\n");
    sb.append("    aShort: ").append(toIndentedString(aShort)).append("\n");
    sb.append("    bShort: ").append(toIndentedString(bShort)).append("\n");
    sb.append("    aInteger: ").append(toIndentedString(aInteger)).append("\n");
    sb.append("    bInteger: ").append(toIndentedString(bInteger)).append("\n");
    sb.append("    cInteger: ").append(toIndentedString(cInteger)).append("\n");
    sb.append("    aLong: ").append(toIndentedString(aLong)).append("\n");
    sb.append("    bLong: ").append(toIndentedString(bLong)).append("\n");
    sb.append("    aBigInteger: ").append(toIndentedString(aBigInteger)).append("\n");
    sb.append("    aCharacter: ").append(toIndentedString(aCharacter)).append("\n");
    sb.append("    bCharacter: ").append(toIndentedString(bCharacter)).append("\n");
    sb.append("    aFloat: ").append(toIndentedString(aFloat)).append("\n");
    sb.append("    bFloat: ").append(toIndentedString(bFloat)).append("\n");
    sb.append("    aDouble: ").append(toIndentedString(aDouble)).append("\n");
    sb.append("    bDouble: ").append(toIndentedString(bDouble)).append("\n");
    sb.append("    aBigDecimal: ").append(toIndentedString(aBigDecimal)).append("\n");
    sb.append("    aString: ").append(toIndentedString(aString)).append("\n");
    sb.append("    bString: ").append(toIndentedString(bString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
