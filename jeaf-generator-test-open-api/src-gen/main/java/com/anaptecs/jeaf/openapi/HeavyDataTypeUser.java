/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.anaptecs.jeaf.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * HeavyDataTypeUser
 */


public class HeavyDataTypeUser {
  @JsonProperty("booleanCode")
  private Boolean booleanCode = null;

  @JsonProperty("byteCode")
  private Integer byteCode = null;

  @JsonProperty("shortCode")
  private Integer shortCode = null;

  @JsonProperty("integerCode")
  private Integer integerCode = null;

  @JsonProperty("floatCode")
  private Float floatCode = null;

  @JsonProperty("doubleCode")
  private Double doubleCode = null;

  @JsonProperty("bigInegerCode")
  private Long bigInegerCode = null;

  @JsonProperty("bigDecimalCode")
  private Double bigDecimalCode = null;

  public HeavyDataTypeUser booleanCode(Boolean booleanCode) {
    this.booleanCode = booleanCode;
    return this;
  }

   /**
   * Get booleanCode
   * @return booleanCode
  **/
  @Schema(required = true, description = "")
  public Boolean isBooleanCode() {
    return booleanCode;
  }

  public void setBooleanCode(Boolean booleanCode) {
    this.booleanCode = booleanCode;
  }

  public HeavyDataTypeUser byteCode(Integer byteCode) {
    this.byteCode = byteCode;
    return this;
  }

   /**
   * Get byteCode
   * @return byteCode
  **/
  @Schema(required = true, description = "")
  public Integer getByteCode() {
    return byteCode;
  }

  public void setByteCode(Integer byteCode) {
    this.byteCode = byteCode;
  }

  public HeavyDataTypeUser shortCode(Integer shortCode) {
    this.shortCode = shortCode;
    return this;
  }

   /**
   * Get shortCode
   * maximum: 4711
   * @return shortCode
  **/
  @Schema(required = true, description = "")
  public Integer getShortCode() {
    return shortCode;
  }

  public void setShortCode(Integer shortCode) {
    this.shortCode = shortCode;
  }

  public HeavyDataTypeUser integerCode(Integer integerCode) {
    this.integerCode = integerCode;
    return this;
  }

   /**
   * Get integerCode
   * minimum: 1234
   * @return integerCode
  **/
  @Schema(required = true, description = "")
  public Integer getIntegerCode() {
    return integerCode;
  }

  public void setIntegerCode(Integer integerCode) {
    this.integerCode = integerCode;
  }

  public HeavyDataTypeUser floatCode(Float floatCode) {
    this.floatCode = floatCode;
    return this;
  }

   /**
   * Get floatCode
   * @return floatCode
  **/
  @Schema(required = true, description = "")
  public Float getFloatCode() {
    return floatCode;
  }

  public void setFloatCode(Float floatCode) {
    this.floatCode = floatCode;
  }

  public HeavyDataTypeUser doubleCode(Double doubleCode) {
    this.doubleCode = doubleCode;
    return this;
  }

   /**
   * Get doubleCode
   * @return doubleCode
  **/
  @Schema(required = true, description = "")
  public Double getDoubleCode() {
    return doubleCode;
  }

  public void setDoubleCode(Double doubleCode) {
    this.doubleCode = doubleCode;
  }

  public HeavyDataTypeUser bigInegerCode(Long bigInegerCode) {
    this.bigInegerCode = bigInegerCode;
    return this;
  }

   /**
   * Get bigInegerCode
   * maximum: 4711
   * @return bigInegerCode
  **/
  @Schema(required = true, description = "")
  public Long getBigInegerCode() {
    return bigInegerCode;
  }

  public void setBigInegerCode(Long bigInegerCode) {
    this.bigInegerCode = bigInegerCode;
  }

  public HeavyDataTypeUser bigDecimalCode(Double bigDecimalCode) {
    this.bigDecimalCode = bigDecimalCode;
    return this;
  }

   /**
   * Get bigDecimalCode
   * @return bigDecimalCode
  **/
  @Schema(required = true, description = "")
  public Double getBigDecimalCode() {
    return bigDecimalCode;
  }

  public void setBigDecimalCode(Double bigDecimalCode) {
    this.bigDecimalCode = bigDecimalCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HeavyDataTypeUser heavyDataTypeUser = (HeavyDataTypeUser) o;
    return Objects.equals(this.booleanCode, heavyDataTypeUser.booleanCode) &&
        Objects.equals(this.byteCode, heavyDataTypeUser.byteCode) &&
        Objects.equals(this.shortCode, heavyDataTypeUser.shortCode) &&
        Objects.equals(this.integerCode, heavyDataTypeUser.integerCode) &&
        Objects.equals(this.floatCode, heavyDataTypeUser.floatCode) &&
        Objects.equals(this.doubleCode, heavyDataTypeUser.doubleCode) &&
        Objects.equals(this.bigInegerCode, heavyDataTypeUser.bigInegerCode) &&
        Objects.equals(this.bigDecimalCode, heavyDataTypeUser.bigDecimalCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(booleanCode, byteCode, shortCode, integerCode, floatCode, doubleCode, bigInegerCode, bigDecimalCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HeavyDataTypeUser {\n");
    
    sb.append("    booleanCode: ").append(toIndentedString(booleanCode)).append("\n");
    sb.append("    byteCode: ").append(toIndentedString(byteCode)).append("\n");
    sb.append("    shortCode: ").append(toIndentedString(shortCode)).append("\n");
    sb.append("    integerCode: ").append(toIndentedString(integerCode)).append("\n");
    sb.append("    floatCode: ").append(toIndentedString(floatCode)).append("\n");
    sb.append("    doubleCode: ").append(toIndentedString(doubleCode)).append("\n");
    sb.append("    bigInegerCode: ").append(toIndentedString(bigInegerCode)).append("\n");
    sb.append("    bigDecimalCode: ").append(toIndentedString(bigDecimalCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
