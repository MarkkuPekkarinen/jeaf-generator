/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.anaptecs.jeaf.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * WeirdParent
 */

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "objectType", visible = true )
@JsonSubTypes({
  @JsonSubTypes.Type(value = WeirdBooking.class, name = "WeirdBooking"),
})

public class WeirdParent {
  @JsonTypeId
  private String objectType = null;

  @JsonProperty("someProperty")
  private String someProperty = null;

  @JsonProperty("complexBooking")
  private String complexBooking = null;

  @JsonProperty("complexBookings")
  private List<String> complexBookings = new ArrayList<>();

  public WeirdParent objectType(String objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Attribute is used as discriminator for inheritance between data types.
   * @return objectType
  **/
  @Schema(required = true, description = "Attribute is used as discriminator for inheritance between data types.")
  public String getObjectType() {
    return objectType;
  }

  public void setObjectType(String objectType) {
    this.objectType = objectType;
  }

  public WeirdParent someProperty(String someProperty) {
    this.someProperty = someProperty;
    return this;
  }

   /**
   * Get someProperty
   * @return someProperty
  **/
  @Schema(required = true, description = "")
  public String getSomeProperty() {
    return someProperty;
  }

  public void setSomeProperty(String someProperty) {
    this.someProperty = someProperty;
  }

  public WeirdParent complexBooking(String complexBooking) {
    this.complexBooking = complexBooking;
    return this;
  }

   /**
   * Get complexBooking
   * @return complexBooking
  **/
  @Schema(required = true, description = "")
  public String getComplexBooking() {
    return complexBooking;
  }

  public void setComplexBooking(String complexBooking) {
    this.complexBooking = complexBooking;
  }

  public WeirdParent complexBookings(List<String> complexBookings) {
    this.complexBookings = complexBookings;
    return this;
  }

  public WeirdParent addComplexBookingsItem(String complexBookingsItem) {
    this.complexBookings.add(complexBookingsItem);
    return this;
  }

   /**
   * Get complexBookings
   * @return complexBookings
  **/
  @Schema(required = true, description = "")
  public List<String> getComplexBookings() {
    return complexBookings;
  }

  public void setComplexBookings(List<String> complexBookings) {
    this.complexBookings = complexBookings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeirdParent weirdParent = (WeirdParent) o;
    return Objects.equals(this.objectType, weirdParent.objectType) &&
        Objects.equals(this.someProperty, weirdParent.someProperty) &&
        Objects.equals(this.complexBooking, weirdParent.complexBooking) &&
        Objects.equals(this.complexBookings, weirdParent.complexBookings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectType, someProperty, complexBooking, complexBookings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeirdParent {\n");
    
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    someProperty: ").append(toIndentedString(someProperty)).append("\n");
    sb.append("    complexBooking: ").append(toIndentedString(complexBooking)).append("\n");
    sb.append("    complexBookings: ").append(toIndentedString(complexBookings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
