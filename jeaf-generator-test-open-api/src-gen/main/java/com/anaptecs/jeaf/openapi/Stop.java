/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.anaptecs.jeaf.openapi;

import java.util.Objects;
import java.util.Arrays;
import com.anaptecs.jeaf.openapi.LinkObject;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Stop
 */

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "objectType", visible = true )
@JsonSubTypes({
  @JsonSubTypes.Type(value = UICStop.class, name = "UICStop"),
  @JsonSubTypes.Type(value = POI.class, name = "POI"),
})

public class Stop {
  @JsonTypeId
  private String objectType = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("links")
  private List<LinkObject> links = null;

  public Stop objectType(String objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Attribute is used as discriminator for inheritance between data types.
   * @return objectType
  **/
  @Schema(required = true, description = "Attribute is used as discriminator for inheritance between data types.")
  public String getObjectType() {
    return objectType;
  }

  public void setObjectType(String objectType) {
    this.objectType = objectType;
  }

  public Stop name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Stop links(List<LinkObject> links) {
    this.links = links;
    return this;
  }

  public Stop addLinksItem(LinkObject linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public List<LinkObject> getLinks() {
    return links;
  }

  public void setLinks(List<LinkObject> links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Stop stop = (Stop) o;
    return Objects.equals(this.objectType, stop.objectType) &&
        Objects.equals(this.name, stop.name) &&
        Objects.equals(this.links, stop.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectType, name, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Stop {\n");
    
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
