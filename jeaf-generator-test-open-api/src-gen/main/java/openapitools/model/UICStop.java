/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import openapitools.model.Stop;
import openapitools.model.UICStopAllOf;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import openapitools.JSON;


/**
 * UICStop
 */
@JsonPropertyOrder({
  UICStop.JSON_PROPERTY_UIC_CODE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXISTING_PROPERTY, property = "objectType", visible = true)

public class UICStop extends Stop {
  public static final String JSON_PROPERTY_UIC_CODE = "uicCode";
  private String uicCode;

  public UICStop() { 
  }

  public UICStop uicCode(String uicCode) {
    this.uicCode = uicCode;
    return this;
  }

   /**
   * Get uicCode
   * @return uicCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UIC_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUicCode() {
    return uicCode;
  }


  @JsonProperty(JSON_PROPERTY_UIC_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUicCode(String uicCode) {
    this.uicCode = uicCode;
  }


  /**
   * Return true if this UICStop object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UICStop uiCStop = (UICStop) o;
    return Objects.equals(this.uicCode, uiCStop.uicCode) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uicCode, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UICStop {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    uicCode: ").append(toIndentedString(uicCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

static {
  // Initialize and register the discriminator mappings.
  Map<String, Class<?>> mappings = new HashMap<String, Class<?>>();
  mappings.put("UICStop", UICStop.class);
  JSON.registerDiscriminator(UICStop.class, "objectType", mappings);
}
}

