/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import openapitools.JSON;


/**
 * ChildAAAllOf
 */
@JsonPropertyOrder({
  ChildAAAllOf.JSON_PROPERTY_CHILD_A_A_ATTRIBUTE,
  ChildAAAllOf.JSON_PROPERTY_SIZED_ARRAY,
  ChildAAAllOf.JSON_PROPERTY_REQUIRED_ARRAY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ChildAAAllOf {
  public static final String JSON_PROPERTY_CHILD_A_A_ATTRIBUTE = "childAAAttribute";
  private Integer childAAAttribute;

  public static final String JSON_PROPERTY_SIZED_ARRAY = "sizedArray";
  private Integer sizedArray;

  public static final String JSON_PROPERTY_REQUIRED_ARRAY = "requiredArray";
  private List<String> requiredArray = new ArrayList<>();

  public ChildAAAllOf() { 
  }

  public ChildAAAllOf childAAAttribute(Integer childAAAttribute) {
    this.childAAAttribute = childAAAttribute;
    return this;
  }

   /**
   * Multi line docs
   * @return childAAAttribute
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Multi line docs")
  @JsonProperty(JSON_PROPERTY_CHILD_A_A_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getChildAAAttribute() {
    return childAAAttribute;
  }


  @JsonProperty(JSON_PROPERTY_CHILD_A_A_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildAAAttribute(Integer childAAAttribute) {
    this.childAAAttribute = childAAAttribute;
  }


  public ChildAAAllOf sizedArray(Integer sizedArray) {
    this.sizedArray = sizedArray;
    return this;
  }

   /**
   * Get sizedArray
   * @return sizedArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIZED_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSizedArray() {
    return sizedArray;
  }


  @JsonProperty(JSON_PROPERTY_SIZED_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSizedArray(Integer sizedArray) {
    this.sizedArray = sizedArray;
  }


  public ChildAAAllOf requiredArray(List<String> requiredArray) {
    this.requiredArray = requiredArray;
    return this;
  }

  public ChildAAAllOf addRequiredArrayItem(String requiredArrayItem) {
    this.requiredArray.add(requiredArrayItem);
    return this;
  }

   /**
   * Get requiredArray
   * @return requiredArray
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REQUIRED_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getRequiredArray() {
    return requiredArray;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED_ARRAY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequiredArray(List<String> requiredArray) {
    this.requiredArray = requiredArray;
  }


  /**
   * Return true if this ChildAA_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChildAAAllOf childAAAllOf = (ChildAAAllOf) o;
    return Objects.equals(this.childAAAttribute, childAAAllOf.childAAAttribute) &&
        Objects.equals(this.sizedArray, childAAAllOf.sizedArray) &&
        Objects.equals(this.requiredArray, childAAAllOf.requiredArray);
  }

  @Override
  public int hashCode() {
    return Objects.hash(childAAAttribute, sizedArray, requiredArray);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChildAAAllOf {\n");
    sb.append("    childAAAttribute: ").append(toIndentedString(childAAAttribute)).append("\n");
    sb.append("    sizedArray: ").append(toIndentedString(sizedArray)).append("\n");
    sb.append("    requiredArray: ").append(toIndentedString(requiredArray)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

