/*
 * Product Base Definitions
 * This component represents the Open API interface of the accounting service.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: jeaf@anaptecs.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import openapitools.model.InventoryType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import openapitools.JSON;


/**
 * BookingID
 */
@JsonPropertyOrder({
  BookingID.JSON_PROPERTY_REFERENCE_I_D,
  BookingID.JSON_PROPERTY_EXTERNAL_REF_I_D,
  BookingID.JSON_PROPERTY_INVENTORY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BookingID {
  public static final String JSON_PROPERTY_REFERENCE_I_D = "referenceID";
  private String referenceID;

  public static final String JSON_PROPERTY_EXTERNAL_REF_I_D = "externalRefID";
  private String externalRefID;

  public static final String JSON_PROPERTY_INVENTORY = "inventory";
  private InventoryType inventory;

  public BookingID() { 
  }

  public BookingID referenceID(String referenceID) {
    this.referenceID = referenceID;
    return this;
  }

   /**
   * Get referenceID
   * @return referenceID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REFERENCE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReferenceID() {
    return referenceID;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReferenceID(String referenceID) {
    this.referenceID = referenceID;
  }


  public BookingID externalRefID(String externalRefID) {
    this.externalRefID = externalRefID;
    return this;
  }

   /**
   * Get externalRefID
   * @return externalRefID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_REF_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalRefID() {
    return externalRefID;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_REF_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalRefID(String externalRefID) {
    this.externalRefID = externalRefID;
  }


  public BookingID inventory(InventoryType inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INVENTORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public InventoryType getInventory() {
    return inventory;
  }


  @JsonProperty(JSON_PROPERTY_INVENTORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInventory(InventoryType inventory) {
    this.inventory = inventory;
  }


  /**
   * Return true if this BookingID object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookingID bookingID = (BookingID) o;
    return Objects.equals(this.referenceID, bookingID.referenceID) &&
        Objects.equals(this.externalRefID, bookingID.externalRefID) &&
        Objects.equals(this.inventory, bookingID.inventory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceID, externalRefID, inventory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookingID {\n");
    sb.append("    referenceID: ").append(toIndentedString(referenceID)).append("\n");
    sb.append("    externalRefID: ").append(toIndentedString(externalRefID)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

